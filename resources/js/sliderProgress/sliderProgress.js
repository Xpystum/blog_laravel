import * as noUiSlider from 'nouislider';
import 'nouislider/dist/nouislider.css';


document.addEventListener('DOMContentLoaded', () => {


    let sliders = document.querySelectorAll('.progres_slider_skill');
    let el = document.getElementById('progres-skill-bar-component-livewire');
    let generatedId = el.getAttribute('wire:id');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π id –¥–ª—è –ø–æ–∏—Å–∫–∞ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ Livewire
    let component = Livewire.find(generatedId);


    sliders.forEach(function (slider) {

        let input = slider.querySelector("input");

        let arrLivewire = component.get('inputValue');
        let percent = 0;


        arrLivewire.forEach(element => {
            if(input.name === element.name){
                percent = element.percent;
            }
        });


        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º noUiSlider –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        noUiSlider.create(slider, {
            start: percent,
            step: 25,
            behaviour: 'lower',
            tooltips: [
                // { to: function(value) { return '‚ù§Ô∏è ' + value; } }
                {
                    to: function (value) {
                        // –ü—Ä–æ–≤–µ—Ä–∫–∞: –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –±–æ–ª—å—à–µ –ø–æ—Ä–æ–≥–∞ - –¥–æ–±–∞–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ

                        if (value == 0) {
                            return 'üìö –í –ø—Ä–æ—Ü–µ—Å—Å–µ –æ–±—É—á–µ–Ω–∏—è ' + value + " %";
                        }
                        if (value == 25) {
                            return 'üå± –ë–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ ' + value + " %";
                        }
                        else if (value == 50) {
                            return 'üß† –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π ' + value + " %";
                        }
                        else if (value == 75) {
                            return 'üíé –ó–Ω–∞—Ç–æ–∫ ' + value + " %";
                        }
                        else if (value == 100) {
                            return 'üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª ' + value + " %";
                        }

                    }
                }
            ],
            connect: 'lower',
            range: {
                'min': 0,
                'max': 100
            },
            pips: {
                mode: 'count',
                values: [1, 2],
                // values: [1],
                density: 25
            },
        });



        // –ü—Ä–∏–º–µ—Ä: –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è update –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —Å–ª–∞–π–¥–µ—Ä–∞
        slider.noUiSlider.on('change', function (values, handle) {

            if (input) {
                input.value = values[handle];

                if(component){
                    component.call('updateProgress', input.name, values[handle]);
                }



            }

        });

    });



});







